{"PML09xKaNs": [], "KE5jtD3HsV": [], "uXfskOIgq3": [], "0TvPGepjmc": [{"output_type": "stream", "name": "stdout", "text": "\nSuccessfully fetched OpenWeatherMap data.\nOpenWeatherMap current and hourly data saved.\n"}], "kQIbZPQT5C": [{"output_type": "stream", "name": "stdout", "text": "\nCurrent Weather Processed:\n"}, {"output_type": "execute_result", "execution_count": 7, "data": {"text/plain": "              timestamp_utc  temp_c  ...  rain_1h_mm  snow_1h_mm\n0 2025-05-20 04:54:46+00:00   32.76  ...        None        None\n\n[1 rows x 17 columns]"}, "metadata": {}}], "fNJTtJRbcg": [{"output_type": "stream", "name": "stdout", "text": "\nHourly Forecast Sample (first 5 hours):\n"}, {"output_type": "execute_result", "execution_count": 9, "data": {"text/plain": "              timestamp_utc  temp_c  feels_like_c  ...  weather_main  rain_1h_mm  snow_1h_mm\n0 2025-05-20 04:00:00+00:00   32.68         39.68  ...        Clouds         NaN        None\n1 2025-05-20 05:00:00+00:00   32.76         39.76  ...        Clouds         NaN        None\n2 2025-05-20 06:00:00+00:00   32.70         39.70  ...        Clouds         NaN        None\n3 2025-05-20 07:00:00+00:00   32.80         39.80  ...        Clouds         NaN        None\n4 2025-05-20 08:00:00+00:00   32.42         39.42  ...        Clouds         NaN        None\n\n[5 rows x 13 columns]"}, "metadata": {}}], "NCoy1MT9FW": [{"output_type": "stream", "name": "stdout", "text": "\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mFileNotFoundError\u001b[39m                         Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[10]\u001b[39m\u001b[32m, line 4\u001b[39m\n\u001b[32m      1\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mnumpy\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mas\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mnp\u001b[39;00m\n\u001b[32m      2\u001b[39m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mio\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m StringIO \u001b[38;5;66;03m# To read the string data as a file\u001b[39;00m\n\u001b[32m----> \u001b[39m\u001b[32m4\u001b[39m historical_weather_df = \u001b[43mpd\u001b[49m\u001b[43m.\u001b[49m\u001b[43mread_csv\u001b[49m\u001b[43m(\u001b[49m\u001b[33;43m\"\u001b[39;49m\u001b[33;43m04_05_25.csv\u001b[39;49m\u001b[33;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\n\u001b[32m      6\u001b[39m \u001b[38;5;66;03m# Rename columns for consistency and ease of use \u001b[39;00m\n\u001b[32m      7\u001b[39m rename_map = {\n\u001b[32m      8\u001b[39m     \u001b[33m\"\u001b[39m\u001b[33mdatetime (UTC)\u001b[39m\u001b[33m\"\u001b[39m: \u001b[33m\"\u001b[39m\u001b[33mtimestamp_utc\u001b[39m\u001b[33m\"\u001b[39m,\n\u001b[32m      9\u001b[39m     \u001b[33m\"\u001b[39m\u001b[33mcoordinates (lat,lon)\u001b[39m\u001b[33m\"\u001b[39m: \u001b[33m\"\u001b[39m\u001b[33mcoordinates_lat_lon\u001b[39m\u001b[33m\"\u001b[39m,\n\u001b[32m   (...)\u001b[39m\u001b[32m     19\u001b[39m     \u001b[33m\"\u001b[39m\u001b[33mtotal_precipitation (mm of water equivalent)\u001b[39m\u001b[33m\"\u001b[39m: \u001b[33m\"\u001b[39m\u001b[33mprecip_mm\u001b[39m\u001b[33m\"\u001b[39m\n\u001b[32m     20\u001b[39m }\n\n\u001b[36mFile \u001b[39m\u001b[32m~/.venv/lib64/python3.13/site-packages/pandas/io/parsers/readers.py:1026\u001b[39m, in \u001b[36mread_csv\u001b[39m\u001b[34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\u001b[39m\n\u001b[32m   1013\u001b[39m kwds_defaults = _refine_defaults_read(\n\u001b[32m   1014\u001b[39m     dialect,\n\u001b[32m   1015\u001b[39m     delimiter,\n\u001b[32m   (...)\u001b[39m\u001b[32m   1022\u001b[39m     dtype_backend=dtype_backend,\n\u001b[32m   1023\u001b[39m )\n\u001b[32m   1024\u001b[39m kwds.update(kwds_defaults)\n\u001b[32m-> \u001b[39m\u001b[32m1026\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43m_read\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfilepath_or_buffer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mkwds\u001b[49m\u001b[43m)\u001b[49m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/.venv/lib64/python3.13/site-packages/pandas/io/parsers/readers.py:620\u001b[39m, in \u001b[36m_read\u001b[39m\u001b[34m(filepath_or_buffer, kwds)\u001b[39m\n\u001b[32m    617\u001b[39m _validate_names(kwds.get(\u001b[33m\"\u001b[39m\u001b[33mnames\u001b[39m\u001b[33m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m))\n\u001b[32m    619\u001b[39m \u001b[38;5;66;03m# Create the parser.\u001b[39;00m\n\u001b[32m--> \u001b[39m\u001b[32m620\u001b[39m parser = \u001b[43mTextFileReader\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfilepath_or_buffer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m*\u001b[49m\u001b[43m*\u001b[49m\u001b[43mkwds\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    622\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m chunksize \u001b[38;5;129;01mor\u001b[39;00m iterator:\n\u001b[32m    623\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m parser\n\n\u001b[36mFile \u001b[39m\u001b[32m~/.venv/lib64/python3.13/site-packages/pandas/io/parsers/readers.py:1620\u001b[39m, in \u001b[36mTextFileReader.__init__\u001b[39m\u001b[34m(self, f, engine, **kwds)\u001b[39m\n\u001b[32m   1617\u001b[39m     \u001b[38;5;28mself\u001b[39m.options[\u001b[33m\"\u001b[39m\u001b[33mhas_index_names\u001b[39m\u001b[33m\"\u001b[39m] = kwds[\u001b[33m\"\u001b[39m\u001b[33mhas_index_names\u001b[39m\u001b[33m\"\u001b[39m]\n\u001b[32m   1619\u001b[39m \u001b[38;5;28mself\u001b[39m.handles: IOHandles | \u001b[38;5;28;01mNone\u001b[39;00m = \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[32m-> \u001b[39m\u001b[32m1620\u001b[39m \u001b[38;5;28mself\u001b[39m._engine = \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43m_make_engine\u001b[49m\u001b[43m(\u001b[49m\u001b[43mf\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mengine\u001b[49m\u001b[43m)\u001b[49m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/.venv/lib64/python3.13/site-packages/pandas/io/parsers/readers.py:1880\u001b[39m, in \u001b[36mTextFileReader._make_engine\u001b[39m\u001b[34m(self, f, engine)\u001b[39m\n\u001b[32m   1878\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[33m\"\u001b[39m\u001b[33mb\u001b[39m\u001b[33m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m mode:\n\u001b[32m   1879\u001b[39m         mode += \u001b[33m\"\u001b[39m\u001b[33mb\u001b[39m\u001b[33m\"\u001b[39m\n\u001b[32m-> \u001b[39m\u001b[32m1880\u001b[39m \u001b[38;5;28mself\u001b[39m.handles = \u001b[43mget_handle\u001b[49m\u001b[43m(\u001b[49m\n\u001b[32m   1881\u001b[39m \u001b[43m    \u001b[49m\u001b[43mf\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   1882\u001b[39m \u001b[43m    \u001b[49m\u001b[43mmode\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   1883\u001b[39m \u001b[43m    \u001b[49m\u001b[43mencoding\u001b[49m\u001b[43m=\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43moptions\u001b[49m\u001b[43m.\u001b[49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[33;43m\"\u001b[39;49m\u001b[33;43mencoding\u001b[39;49m\u001b[33;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   1884\u001b[39m \u001b[43m    \u001b[49m\u001b[43mcompression\u001b[49m\u001b[43m=\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43moptions\u001b[49m\u001b[43m.\u001b[49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[33;43m\"\u001b[39;49m\u001b[33;43mcompression\u001b[39;49m\u001b[33;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   1885\u001b[39m \u001b[43m    \u001b[49m\u001b[43mmemory_map\u001b[49m\u001b[43m=\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43moptions\u001b[49m\u001b[43m.\u001b[49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[33;43m\"\u001b[39;49m\u001b[33;43mmemory_map\u001b[39;49m\u001b[33;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mFalse\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   1886\u001b[39m \u001b[43m    \u001b[49m\u001b[43mis_text\u001b[49m\u001b[43m=\u001b[49m\u001b[43mis_text\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   1887\u001b[39m \u001b[43m    \u001b[49m\u001b[43merrors\u001b[49m\u001b[43m=\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43moptions\u001b[49m\u001b[43m.\u001b[49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[33;43m\"\u001b[39;49m\u001b[33;43mencoding_errors\u001b[39;49m\u001b[33;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[33;43m\"\u001b[39;49m\u001b[33;43mstrict\u001b[39;49m\u001b[33;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   1888\u001b[39m \u001b[43m    \u001b[49m\u001b[43mstorage_options\u001b[49m\u001b[43m=\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43moptions\u001b[49m\u001b[43m.\u001b[49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[33;43m\"\u001b[39;49m\u001b[33;43mstorage_options\u001b[39;49m\u001b[33;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   1889\u001b[39m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   1890\u001b[39m \u001b[38;5;28;01massert\u001b[39;00m \u001b[38;5;28mself\u001b[39m.handles \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[32m   1891\u001b[39m f = \u001b[38;5;28mself\u001b[39m.handles.handle\n\n\u001b[36mFile \u001b[39m\u001b[32m~/.venv/lib64/python3.13/site-packages/pandas/io/common.py:873\u001b[39m, in \u001b[36mget_handle\u001b[39m\u001b[34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[39m\n\u001b[32m    868\u001b[39m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(handle, \u001b[38;5;28mstr\u001b[39m):\n\u001b[32m    869\u001b[39m     \u001b[38;5;66;03m# Check whether the filename is to be opened in binary mode.\u001b[39;00m\n\u001b[32m    870\u001b[39m     \u001b[38;5;66;03m# Binary mode does not support 'encoding' and 'newline'.\u001b[39;00m\n\u001b[32m    871\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m ioargs.encoding \u001b[38;5;129;01mand\u001b[39;00m \u001b[33m\"\u001b[39m\u001b[33mb\u001b[39m\u001b[33m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m ioargs.mode:\n\u001b[32m    872\u001b[39m         \u001b[38;5;66;03m# Encoding\u001b[39;00m\n\u001b[32m--> \u001b[39m\u001b[32m873\u001b[39m         handle = \u001b[38;5;28;43mopen\u001b[39;49m\u001b[43m(\u001b[49m\n\u001b[32m    874\u001b[39m \u001b[43m            \u001b[49m\u001b[43mhandle\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    875\u001b[39m \u001b[43m            \u001b[49m\u001b[43mioargs\u001b[49m\u001b[43m.\u001b[49m\u001b[43mmode\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    876\u001b[39m \u001b[43m            \u001b[49m\u001b[43mencoding\u001b[49m\u001b[43m=\u001b[49m\u001b[43mioargs\u001b[49m\u001b[43m.\u001b[49m\u001b[43mencoding\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    877\u001b[39m \u001b[43m            \u001b[49m\u001b[43merrors\u001b[49m\u001b[43m=\u001b[49m\u001b[43merrors\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    878\u001b[39m \u001b[43m            \u001b[49m\u001b[43mnewline\u001b[49m\u001b[43m=\u001b[49m\u001b[33;43m\"\u001b[39;49m\u001b[33;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[32m    879\u001b[39m \u001b[43m        \u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    880\u001b[39m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m    881\u001b[39m         \u001b[38;5;66;03m# Binary mode\u001b[39;00m\n\u001b[32m    882\u001b[39m         handle = \u001b[38;5;28mopen\u001b[39m(handle, ioargs.mode)\n\n\u001b[31mFileNotFoundError\u001b[39m: [Errno 2] No such file or directory: '04_05_25.csv'\n"}], "CGuydnrH4P": [{"name": "stdout", "output_type": "stream", "text": ["\n", "--- Info for Processed Oikolab Data ---\n", "<class 'pandas.core.frame.DataFrame'>\n", "RangeIndex: 10521 entries, 0 to 10520\n", "Data columns (total 25 columns):\n", " #   Column               Non-Null Count  Dtype              \n", "---  ------               --------------  -----              \n", " 0   timestamp_utc        10521 non-null  datetime64[ns, UTC]\n", " 1   coordinates_lat_lon  10521 non-null  object             \n", " 2   model_name           10521 non-null  object             \n", " 3   model_elevation_m    10521 non-null  float64            \n", " 4   utc_offset_hrs       10521 non-null  float64            \n", " 5   temp_c               10521 non-null  float64            \n", " 6   relative_humidity    10521 non-null  float64            \n", " 7   wind_speed_mps       10521 non-null  float64            \n", " 8   wind_deg             10521 non-null  float64            \n", " 9   wind_gust_mps        10521 non-null  float64            \n", " 10  cloud_cover          10521 non-null  float64            \n", " 11  precip_mm            10521 non-null  float64            \n", " 12  hour_of_day          10521 non-null  int32              \n", " 13  day_of_week          10521 non-null  int32              \n", " 14  day_of_year          10521 non-null  int32              \n", " 15  month_of_year        10521 non-null  int32              \n", " 16  year                 10521 non-null  int32              \n", " 17  hour_sin             10521 non-null  float64            \n", " 18  hour_cos             10521 non-null  float64            \n", " 19  day_of_week_sin      10521 non-null  float64            \n", " 20  day_of_week_cos      10521 non-null  float64            \n", " 21  month_sin            10521 non-null  float64            \n", " 22  month_cos            10521 non-null  float64            \n", " 23  day_of_year_sin      10521 non-null  float64            \n", " 24  day_of_year_cos      10521 non-null  float64            \n", "dtypes: datetime64[ns, UTC](1), float64(17), int32(5), object(2)\n", "memory usage: 1.8+ MB\n", "\n", "--- Processed Oikolab Historical Weather Data (Head) ---\n"]}, {"data": {"text/html": ["<div>\n", "<style scoped>\n", "    .dataframe tbody tr th:only-of-type {\n", "        vertical-align: middle;\n", "    }\n", "\n", "    .dataframe tbody tr th {\n", "        vertical-align: top;\n", "    }\n", "\n", "    .dataframe thead th {\n", "        text-align: right;\n", "    }\n", "</style>\n", "<table border=\"1\" class=\"dataframe\">\n", "  <thead>\n", "    <tr style=\"text-align: right;\">\n", "      <th></th>\n", "      <th>timestamp_utc</th>\n", "      <th>coordinates_lat_lon</th>\n", "      <th>model_name</th>\n", "      <th>model_elevation_m</th>\n", "      <th>utc_offset_hrs</th>\n", "      <th>temp_c</th>\n", "      <th>relative_humidity</th>\n", "      <th>wind_speed_mps</th>\n", "      <th>wind_deg</th>\n", "      <th>wind_gust_mps</th>\n", "      <th>...</th>\n", "      <th>month_of_year</th>\n", "      <th>year</th>\n", "      <th>hour_sin</th>\n", "      <th>hour_cos</th>\n", "      <th>day_of_week_sin</th>\n", "      <th>day_of_week_cos</th>\n", "      <th>month_sin</th>\n", "      <th>month_cos</th>\n", "      <th>day_of_year_sin</th>\n", "      <th>day_of_year_cos</th>\n", "    </tr>\n", "  </thead>\n", "  <tbody>\n", "    <tr>\n", "      <th>0</th>\n", "      <td>2024-02-21 15:00:00+00:00</td>\n", "      <td>(16.068, 108.212)</td>\n", "      <td>era5</td>\n", "      <td>90.12</td>\n", "      <td>7.0</td>\n", "      <td>24.60</td>\n", "      <td>0.94</td>\n", "      <td>3.64</td>\n", "      <td>138.10</td>\n", "      <td>5.47</td>\n", "      <td>...</td>\n", "      <td>2</td>\n", "      <td>2024</td>\n", "      <td>-0.707107</td>\n", "      <td>-7.071068e-01</td>\n", "      <td>0.974928</td>\n", "      <td>-0.222521</td>\n", "      <td>0.5</td>\n", "      <td>0.866025</td>\n", "      <td>0.769031</td>\n", "      <td>0.639212</td>\n", "    </tr>\n", "    <tr>\n", "      <th>1</th>\n", "      <td>2024-02-21 16:00:00+00:00</td>\n", "      <td>(16.068, 108.212)</td>\n", "      <td>era5</td>\n", "      <td>90.12</td>\n", "      <td>7.0</td>\n", "      <td>24.51</td>\n", "      <td>0.94</td>\n", "      <td>3.63</td>\n", "      <td>139.19</td>\n", "      <td>5.53</td>\n", "      <td>...</td>\n", "      <td>2</td>\n", "      <td>2024</td>\n", "      <td>-0.866025</td>\n", "      <td>-5.000000e-01</td>\n", "      <td>0.974928</td>\n", "      <td>-0.222521</td>\n", "      <td>0.5</td>\n", "      <td>0.866025</td>\n", "      <td>0.769031</td>\n", "      <td>0.639212</td>\n", "    </tr>\n", "    <tr>\n", "      <th>2</th>\n", "      <td>2024-02-21 17:00:00+00:00</td>\n", "      <td>(16.068, 108.212)</td>\n", "      <td>era5</td>\n", "      <td>90.12</td>\n", "      <td>7.0</td>\n", "      <td>24.35</td>\n", "      <td>0.94</td>\n", "      <td>3.63</td>\n", "      <td>140.23</td>\n", "      <td>5.44</td>\n", "      <td>...</td>\n", "      <td>2</td>\n", "      <td>2024</td>\n", "      <td>-0.965926</td>\n", "      <td>-2.588190e-01</td>\n", "      <td>0.974928</td>\n", "      <td>-0.222521</td>\n", "      <td>0.5</td>\n", "      <td>0.866025</td>\n", "      <td>0.769031</td>\n", "      <td>0.639212</td>\n", "    </tr>\n", "    <tr>\n", "      <th>3</th>\n", "      <td>2024-02-21 18:00:00+00:00</td>\n", "      <td>(16.068, 108.212)</td>\n", "      <td>era5</td>\n", "      <td>90.12</td>\n", "      <td>7.0</td>\n", "      <td>24.02</td>\n", "      <td>0.95</td>\n", "      <td>3.59</td>\n", "      <td>141.57</td>\n", "      <td>5.33</td>\n", "      <td>...</td>\n", "      <td>2</td>\n", "      <td>2024</td>\n", "      <td>-1.000000</td>\n", "      <td>-1.836970e-16</td>\n", "      <td>0.974928</td>\n", "      <td>-0.222521</td>\n", "      <td>0.5</td>\n", "      <td>0.866025</td>\n", "      <td>0.769031</td>\n", "      <td>0.639212</td>\n", "    </tr>\n", "    <tr>\n", "      <th>4</th>\n", "      <td>2024-02-21 19:00:00+00:00</td>\n", "      <td>(16.068, 108.212)</td>\n", "      <td>era5</td>\n", "      <td>90.12</td>\n", "      <td>7.0</td>\n", "      <td>23.99</td>\n", "      <td>0.95</td>\n", "      <td>3.48</td>\n", "      <td>143.77</td>\n", "      <td>5.28</td>\n", "      <td>...</td>\n", "      <td>2</td>\n", "      <td>2024</td>\n", "      <td>-0.965926</td>\n", "      <td>2.588190e-01</td>\n", "      <td>0.974928</td>\n", "      <td>-0.222521</td>\n", "      <td>0.5</td>\n", "      <td>0.866025</td>\n", "      <td>0.769031</td>\n", "      <td>0.639212</td>\n", "    </tr>\n", "  </tbody>\n", "</table>\n", "<p>5 rows \u00d7 25 columns</p>\n", "</div>"], "text/plain": ["              timestamp_utc coordinates_lat_lon model_name  model_elevation_m  \\\n", "0 2024-02-21 15:00:00+00:00   (16.068, 108.212)       era5              90.12   \n", "1 2024-02-21 16:00:00+00:00   (16.068, 108.212)       era5              90.12   \n", "2 2024-02-21 17:00:00+00:00   (16.068, 108.212)       era5              90.12   \n", "3 2024-02-21 18:00:00+00:00   (16.068, 108.212)       era5              90.12   \n", "4 2024-02-21 19:00:00+00:00   (16.068, 108.212)       era5              90.12   \n", "\n", "   utc_offset_hrs  temp_c  relative_humidity  wind_speed_mps  wind_deg  \\\n", "0             7.0   24.60               0.94            3.64    138.10   \n", "1             7.0   24.51               0.94            3.63    139.19   \n", "2             7.0   24.35               0.94            3.63    140.23   \n", "3             7.0   24.02               0.95            3.59    141.57   \n", "4             7.0   23.99               0.95            3.48    143.77   \n", "\n", "   wind_gust_mps  ...  month_of_year  year  hour_sin      hour_cos  \\\n", "0           5.47  ...              2  2024 -0.707107 -7.071068e-01   \n", "1           5.53  ...              2  2024 -0.866025 -5.000000e-01   \n", "2           5.44  ...              2  2024 -0.965926 -2.588190e-01   \n", "3           5.33  ...              2  2024 -1.000000 -1.836970e-16   \n", "4           5.28  ...              2  2024 -0.965926  2.588190e-01   \n", "\n", "   day_of_week_sin  day_of_week_cos  month_sin  month_cos  day_of_year_sin  \\\n", "0         0.974928        -0.222521        0.5   0.866025         0.769031   \n", "1         0.974928        -0.222521        0.5   0.866025         0.769031   \n", "2         0.974928        -0.222521        0.5   0.866025         0.769031   \n", "3         0.974928        -0.222521        0.5   0.866025         0.769031   \n", "4         0.974928        -0.222521        0.5   0.866025         0.769031   \n", "\n", "   day_of_year_cos  \n", "0         0.639212  \n", "1         0.639212  \n", "2         0.639212  \n", "3         0.639212  \n", "4         0.639212  \n", "\n", "[5 rows x 25 columns]"]}, "execution_count": 19, "metadata": {}, "output_type": "execute_result"}], "M3kmA9A7TM": [{"name": "stdout", "output_type": "stream", "text": ["\n", "Processed Oikolab historical data saved to 'danang_historical_weather_oikolab_processed.csv'.\n"]}]}